name: build
on: [push, pull_request]
jobs:
  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies and mypy
      run: |
        pip install cython mypy types-termcolor types-requests types-PyYAML
        pip install -r requirements.txt
    - name: Verify mypy types
      run: |
        mypy --version
        mypy dmoj
  test-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install build dependencies
      run: pip install cython
    - name: Create sdist
      run: python setup.py sdist
    - name: Install test dependencies
      run: sudo apt-get install -y libseccomp-dev
    - name: Test sdist
      run: |
        pip install dist/*.tar.gz
        dmoj-autoconf
  amd64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - name: Download docker image
        run: docker pull btnoj/runtimes
      - name: Install python
        run: |
          curl -L "https://github.com/btnoj/runtimes-python/releases/latest/download/python${{ matrix.python-version }}-amd64.tar.gz" |
          tar -xz
      - name: Create docker scripts
        run: |
          cat > run <<'EOF'
          #!/bin/bash -e
          export PYTHONUNBUFFERED=1
          export LANG=C.UTF-8
          export PYTHONIOENCODING=utf8
          cd /code
          export PYTHON="/code/python${{ matrix.python-version }}/bin/python${{ matrix.python-version }}"
          "$PYTHON" -m pip install --upgrade pip wheel
          "$PYTHON" -m pip install cython coverage
          "$PYTHON" -m pip install -e .[test]
          chmod o+w .
          runuser -u judge -w PATH /code/run-su
          EOF

          cat > run-su <<'EOF'
          #!/bin/bash -e
          . ~/.profile
          cd /code
          "$PYTHON" -m coverage run -m unittest discover dmoj/tests/
          "$PYTHON" -m coverage run --append .docker.test.py
          "$PYTHON" -m coverage combine
          "$PYTHON" -m coverage xml
          EOF

          chmod a+x run run-su
      - uses: actions/cache@v2
        with:
          path: ~/docker-cache
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}
      - name: Create cache
        run: |
          mkdir -p "$HOME/docker-cache/pip"
          sudo chown root:root -R "$HOME/docker-cache"
      - name: Execute tests in docker
        run: docker run -e PYTHON_VERSION="${{ matrix.python-version }}" -v "$(pwd):/code" -v "$HOME/docker-cache:/root/.cache" --cap-add=SYS_PTRACE btnoj/runtimes
      - name: Upload coverage data
        uses: codecov/codecov-action@v1
      - name: Prepare cache for storage
        run: sudo chown -R "$USER:$USER" "$HOME/docker-cache"